name: Build docker Image for docker hub

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

env:
  IMAGE: 'prestashopcorp/ascend-great-expectations-gcs'

jobs:

 build_ascend_ge_image:
    name: Build custom ascend/GE image for docker Hub
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'

    # - name: Install dependencies
    #   run: python -m pip install --upgrade pip setuptools wheel twine build

    # - name: Build python package
    #   run: python -m build

    # - name: Publish python package
    #   env: 
    #     TWINE_PASSWORD : ${{ secrets.PYPI_API_TOKEN }}
    #   run: python -m twine upload -u __token__ --non-interactive --repository-url https://upload.pypi.org/legacy/ dist/*
    
    - name: Set package version
      id : vars
      run: |
        curl -s 'https://pypi.org/pypi/ascend-great-expectations-gcs/json' > /tmp/version.json
        echo "::set-output name=package_version::$(cat /tmp/version.json | jq -r .info.version)"
    
    - name: Print package version
      run: echo ${{ steps.vars.outputs.package_version }}


    # - name: Docker meta
    #   id: meta
    #   uses: docker/metadata-action@v3
    #   with:
    #     images: |
    #       ${{ env.IMAGE }}
    #     tags: |
    #       type=semver,pattern={{version}}
    #       type=sha
    #       latest

    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v1

    # - name: Login to DockerHub
    #   uses: docker/login-action@v1 
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}

    # - name: Build and push
    #   id: docker_build
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: .
    #     push: true
    #     tags: ${{ steps.meta.outputs.tags }}
    #     labels: ${{ steps.meta.outputs.labels }}
    #     build-args: |
    #       PACKAGE_VERSION=0.1.2

    # - name: Image digest
    #   run: echo ${{ steps.docker_build.outputs.digest }}
    # curl https://pypi.org/pypi/ascend-great-expectations-gcs/json
    # curl -s 'https://pypi.org/pypi/ascend-great-expectations-gcs/json' | python3 -c "import sys, json; print(json.load(sys.stdin)['info']['version'])"
    # PACKAGE_VERSION = eval(curl -s 'https://pypi.org/pypi/ascend-great-expectations-gcs/json' | python3 -c "import sys, json; print(json.load(sys.stdin)['info']['version'])")