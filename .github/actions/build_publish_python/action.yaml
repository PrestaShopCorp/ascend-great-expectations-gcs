name: 'Build and publish python package'
description: 'Build and publish python package'
inputs:
  pypi-token:
    required: true
    description: "Pypi api token"
    default: ""
  package-name:
    required: true
    description: "package name"
    default: ""

outputs:
  package-version: 
    description: "package version"
    value: ${{ steps.python_package.outputs.package_version }}
    
runs:
  using: "composite"
  steps:
  - name: Install dependencies
    shell: bash
    run: python -m pip install --upgrade pip setuptools wheel twine build

  - name: Build python package
    shell: bash
    run: python -m build

  - name: Publish python package
    shell: bash
    env: 
      TWINE_PASSWORD : ${{ inputs.pypi-token }}
    run: python -m twine upload -u __token__ --non-interactive  --skip-existing --repository-url https://upload.pypi.org/legacy/ dist/*

   - name: Read package version
     run: |
          import configparser
          config = configparser.ConfigParser()
          config.read('setup.cfg')
          print(config['metadata']['version'])
      shell: python
  
  # - name: Set package version
  #   shell: bash
  #   id : python_package
  #   run: |
  #     echo "::set-output name=package_version::$(cat /tmp/version.txt)"